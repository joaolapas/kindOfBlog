{
    "openapi": "3.0.0",
    "info": {
      "title": "Blog API Documentation",
      "description": "In this documentation you will be able to consult the API end-points and also test all available routes. Do not forget to register and carry out the authorization.",
      "contact": {
        "email": "joaolapasdev@gmail.com"
      },
      "version": "1.0.0"
    },
    "servers": [
  
      {
        "url": "https://kind-of-blog-api.onrender.com",
        "description": "Render Server"
      },
      {
        "url": "http://localhost:3000",
        "description": "Local Server"
      }
    ],
    "paths": {
      "/user/": {
        "post": {
          "summary": "Create a new user",
          "description": "Route responsible for creating a new user",
          "tags": ["Users"],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "Users": {
                    "value": {
                      "name": "Joao Lapas",
                      "username": "joaolapas",
                      "email": "joaolapasdev@gmail.com",
                      "password": "1234567",
                      "avatar": "https://i.imgur.com/Ry1cb5M.png",
                      "background": "https://images.wallpapersden.com/image/download/triangle-8k-blue-pattern_bGZlbmiUmZqaraWkpJRmbmdlrWZlbWU.jpg"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schemma": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "/user": {
        "get": {
          "summary": "Search all users",
          "description": "Route responsible for fetching all users",
          "tags": ["Users"],
          "security": [{ "bearerAuth": [] }],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/{id}/": {
        "get": {
          "summary": "Search user by id",
          "description": "Route responsible for searching for user by id",
          "tags": ["Users"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "description": "User ID",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "/user/{id}": {
        "patch": {
          "summary": "Update user by id",
          "description": "Route responsible for editing the user by id",
          "tags": ["Users"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "description": "User ID",
              "required": true
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "Users": {
                    "value": {
                      "name": "Jo√£o Lapas"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "/auth": {
        "post": {
          "summary": "Login to Blog",
          "description": "Route responsible for logging in a registered user",
          "tags": ["Auth"],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "User": {
                    "value": {
                      "email": "joaolapasdev@gmail.com",
                      "password": "1234567"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/post/": {
        "post": {
          "summary": "Create a new news",
          "description": "Route responsible for creating a new Post",
          "tags": ["Post"],
          "security": [{ "bearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                },
                "examples": {
                  "News": {
                    "value": {
                      "user": "",
                      "banner": "https://labs.tadigital.com/wp-content/uploads/2017/07/ES6-banner.jpg",
                      "title": "Qualquer coisa",
                      "text": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                      "likes": [],
                      "comments": []
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schemma": {
                    "type": "object",
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          }
        }
      },
      "/post": {
        "get": {
          "summary": "Search all Posts",
          "description": "Route responsible for fetching all posts",
          "tags": ["Post"],
          "parameters": [
            {
              "in": "query",
              "name": "limit",
              "type": "string"
            },
            {
              "in": "query",
              "name": "offset",
              "type": "string"
            }
          ],
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/post/top": {
        "get": {
          "summary": "Search top Post",
          "description": "Route responsible for fetching top Post",
          "tags": ["Post"],
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schemma": {
                    "type": "object",
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          }
        }
      },
      "/post/search": {
        "get": {
          "summary": "Search Post by title",
          "description": "Route responsible for fetching the Posts that match the title sent via query params",
          "tags": ["Post"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "query",
              "name": "title",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/post/byUser": {
        "get": {
          "summary": "Search Posts by user id",
          "description": "Route responsible for fetching posts by user id",
          "tags": ["Post"],
          "security": [{ "bearerAuth": [] }],
          "responses": {
            "400": {
              "description": "Not Found"
            },
            "401": {
              "description": "Unauthorized"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/post/{id}/": {
        "get": {
          "summary": "Search Posts by id",
          "description": "Route responsible for fetching Posts by id",
          "tags": ["Post"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "postId",
              "type": "string",
              "description": "Post ID",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schemma": {
                    "type": "object",
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          }
        }
      },
      "/post/{id}": {
        "patch": {
          "summary": "Update a Post",
          "description": "Route responsible for updating a Post",
          "tags": ["Post"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "description": "Post ID",
              "required": true
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                },
                "examples": {
                  "Post": {
                    "value": {
                      "banner": "Edit",
                      "title": "Edit",
                      "text": "Edit"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schemma": {
                    "type": "object",
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          }
        }
      },
      "/post/{id}/": {
        "delete": {
          "summary": "Delete a Post",
          "description": "Route responsible for deleting a Post",
          "tags": ["Post"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "postId",
              "type": "string",
              "description": "Post ID",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/post/like/{id}/": {
        "patch": {
          "summary": "Like a Post",
          "description": "Route responsible for liking a Post",
          "tags": ["Post"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "type": "string",
              "description": "User ID",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/post/comment/{id}/": {
        "patch": {
          "summary": "Comment on a Post",
          "description": "Route responsible for commenting on a Post",
          "tags": ["Post"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "postId",
              "type": "string",
              "description": "Post ID",
              "required": true
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                },
                "examples": {
                  "Comment": {
                    "value": {
                      "message": "Um coment√°rio!"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/post/comment/{idNews}/{idComment}": {
        "patch": {
          "summary": "Comment on a Post",
          "description": "Route responsible for commenting on a Post",
          "tags": ["Post"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "postId",
              "type": "string",
              "description": "Post ID",
              "required": true
            },
            {
              "in": "path",
              "name": "commentId",
              "type": "string",
              "description": "Comment ID",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Not Found"
            },
            "200": {
              "description": "OK"
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "avatar": {
              "type": "string"
            },
            "background": {
              "type": "string"
            }
          }
        },
        "Post": {
          "type": "object",
          "properties": {
            "user": {
              "type": "string"
            },
            "banner": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "likes": {
              "type": "number"
            },
            "comments": {
              "type": "array"
            },
            "createdAt": {
              "type": "date"
            }
          }
        },
        "Comment": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        }
      }
    }
  }